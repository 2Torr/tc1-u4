C51 COMPILER V9.59.0.0   MAIN                                                              09/10/2018 02:34:02 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Program Files\Keil\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Li
                    -stings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC15F2K60S2.h>
   2          #include <intrins.h>
   3          
   4          #define O_BOOST       P35
   5          #define I_AVR_ONLINE  P33 // PD2
   6          #define O_AVR_BUTTON  P32 // PD1
   7          #define I_BUTTON      P34
   8          
   9          // states
  10          #define SLEEP   0
  11          #define BOOT    1
  12          #define ONLINE  2
  13          
  14          #define LOW  0
  15          #define HIGH 1
  16          
  17          int state;
  18          int button_changed;
  19          int button_state;
  20          
  21          int avr_online_state;
  22          
  23          
  24          
  25          
  26          void timer0_ISR (void) interrupt 1
  27          {
  28   1        static float avg_button = 10;
  29   1        static float avg_avr_online = 10;
  30   1        
  31   1        int new_button_state;
  32   1        int new_avr_online_state;
  33   1        
  34   1        // Increment Counter to shorten overflow time
  35   1        //TH0 = (65536 - 1000)/256;     // TODO: Calculation?! Old: 1ms = 1000MZ, davon das High-Byte in TH0
  36   1        //TL0 = (65536 - 1000)%256;     // das Low-Byte in TL0
  37   1        
  38   1        // Button entprellen
  39   1        
  40   1      
  41   1      
  42   1        avg_button     = (avg_button * 9+I_BUTTON * 10) / 10;
  43   1        avg_avr_online = (avg_avr_online * 9+I_AVR_ONLINE * 10) / 10;
  44   1        
  45   1        if (avg_button > 5) {
  46   2              new_button_state = HIGH;
  47   2        } else {
  48   2              new_button_state = LOW;
  49   2        }
  50   1        
  51   1        if (avg_avr_online > 5) {
  52   2              new_avr_online_state = HIGH;
  53   2        } else {
  54   2              new_avr_online_state = LOW;
C51 COMPILER V9.59.0.0   MAIN                                                              09/10/2018 02:34:02 PAGE 2   

  55   2        }
  56   1        
  57   1        if (new_button_state != button_state) {
  58   2          button_state = new_button_state;
  59   2          button_changed = 1;
  60   2        }
  61   1        
  62   1        if (new_avr_online_state != avr_online_state) {
  63   2          avr_online_state = new_avr_online_state;
  64   2        }
  65   1        
  66   1      }
  67          
  68          
  69          void setup()
  70          {
  71   1        // P33 (I_AVR_ONLINE) to Input only
  72   1        P3M0 &= ~(0 << 3);
  73   1        P3M1 |= 1 << 3;
  74   1        
  75   1        // P34 (I_BUTTON) to Input only
  76   1        P3M0 &= ~(0 << 4);
  77   1        P3M1 |= 1 << 4;
  78   1        
  79   1        // P35 (O_BOOST) to PushPull Output
  80   1        P3M0 |= 1 << 5;
  81   1        P3M1 &= ~(0 << 5);
  82   1        
  83   1        // P32 (O_AVR_BUTTON) to PushPull Output
  84   1        P3M0 |= 1 << 2;
  85   1        P3M1 &= ~(0 << 2);
  86   1      
  87   1        // initial states
  88   1        state = SLEEP;
  89   1        button_changed = 0;
  90   1        button_state = HIGH;
  91   1        avr_online_state = LOW;
  92   1        
  93   1        O_AVR_BUTTON = HIGH;
  94   1        O_BOOST = LOW;
  95   1        
  96   1        // Timers
  97   1        TMOD = (TMOD & 0xF0) | 0x01;  // Set T/C0 Mode 1, 16Bit, No Auto Reload
  98   1        ET0 = 1;                      // Enable Timer 0 Interrupts
  99   1        TR0 = 1;                      // Start Timer 0 Running
 100   1        EA = 1;                       // Global Interrupt Enable
 101   1      
 102   1      }
 103          
 104          void delay(int ms)
 105          {
 106   1          unsigned int j  =   0;
 107   1          unsigned int g  =   0;
 108   1          for(j=0;j<ms;j++)
 109   1          {
 110   2              for(g=0;g<600;g++)
 111   2              {
 112   3                  _nop_();
 113   3                  _nop_();
 114   3                  _nop_();
 115   3                  _nop_();
 116   3                  _nop_();
C51 COMPILER V9.59.0.0   MAIN                                                              09/10/2018 02:34:02 PAGE 3   

 117   3              }
 118   2          }
 119   1      }
 120          
 121          void main()
 122          {
 123   1        setup();
 124   1        
 125   1        delay(5000);
 126   1        O_AVR_BUTTON = LOW;
 127   1        O_BOOST = HIGH;
 128   1        delay(500);
 129   1        O_AVR_BUTTON = HIGH;
 130   1        
 131   1        while(1){}
 132   1        
 133   1        
 134   1      /*
 135   1        while(1)
 136   1        {
 137   1          
 138   1          O_AVR_BUTTON = button_state;
 139   1      
 140   1          
 141   1          switch (state) {
 142   1          case SLEEP:
 143   1            
 144   1            // POWER SAVING OPTIONS,
 145   1            // deactivate timer, enable interrupt2, ...
 146   1          
 147   1            if (button_changed && button_state == LOW) {
 148   1              button_changed = 0;
 149   1              O_BOOST = HIGH;
 150   1              state = BOOT;
 151   1            }
 152   1            break;
 153   1            
 154   1          case BOOT:
 155   1            if (avr_online_state == HIGH)
 156   1              state = ONLINE;
 157   1            
 158   1            // TODO: Timeout
 159   1      
 160   1            break;
 161   1            
 162   1          case ONLINE:
 163   1            if (avr_online_state == LOW) {
 164   1              O_BOOST = LOW;
 165   1              state = SLEEP;
 166   1            }
 167   1            break;
 168   1          
 169   1          default:
 170   1            break;
 171   1          }
 172   1      
 173   1        }
 174   1      */
 175   1      }
 176          
 177          

C51 COMPILER V9.59.0.0   MAIN                                                              09/10/2018 02:34:02 PAGE 4   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    433    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
